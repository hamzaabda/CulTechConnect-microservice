<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="2bd1626f-a9bc-4879-bec2-82ef27d29fb9" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/evenement/src/main/java/tn/esprit/evenement/controller/EventController.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/evenement/src/main/java/tn/esprit/evenement/entite/Event.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/evenement/src/main/java/tn/esprit/evenement/repository/EventRepository.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/evenement/src/main/java/tn/esprit/evenement/service/EventService.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Authentication/pom.xml" beforeDir="false" afterPath="$PROJECT_DIR$/Authentication/pom.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Chat/pom.xml" beforeDir="false" afterPath="$PROJECT_DIR$/Chat/pom.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/UserManagement/pom.xml" beforeDir="false" afterPath="$PROJECT_DIR$/UserManagement/pom.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/api-gateway/pom.xml" beforeDir="false" afterPath="$PROJECT_DIR$/api-gateway/pom.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/blog/pom.xml" beforeDir="false" afterPath="$PROJECT_DIR$/blog/pom.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/evenement/pom.xml" beforeDir="false" afterPath="$PROJECT_DIR$/evenement/pom.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/notification/pom.xml" beforeDir="false" afterPath="$PROJECT_DIR$/notification/pom.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/partenariat/pom.xml" beforeDir="false" afterPath="$PROJECT_DIR$/partenariat/pom.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/programmeechange/pom.xml" beforeDir="false" afterPath="$PROJECT_DIR$/programmeechange/pom.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/rating/pom.xml" beforeDir="false" afterPath="$PROJECT_DIR$/rating/pom.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/reclamation/pom.xml" beforeDir="false" afterPath="$PROJECT_DIR$/reclamation/pom.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../Frontend/Admin/package-lock.json" beforeDir="false" afterPath="$PROJECT_DIR$/../Frontend/Admin/package-lock.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../Frontend/Admin/package.json" beforeDir="false" afterPath="$PROJECT_DIR$/../Frontend/Admin/package.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../Frontend/Admin/src/app/app.module.ts" beforeDir="false" afterPath="$PROJECT_DIR$/../Frontend/Admin/src/app/app.module.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../Frontend/Admin/src/app/pages/tasks/createtask/createtask.component.html" beforeDir="false" afterPath="$PROJECT_DIR$/../Frontend/Admin/src/app/pages/tasks/createtask/createtask.component.html" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../Frontend/Admin/src/app/pages/tasks/createtask/createtask.component.ts" beforeDir="false" afterPath="$PROJECT_DIR$/../Frontend/Admin/src/app/pages/tasks/createtask/createtask.component.ts" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Interface" />
        <option value="Class" />
        <option value="Dockerfile" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$/.." />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;customColor&quot;: &quot;&quot;,
  &quot;associatedIndex&quot;: 0
}</component>
  <component name="ProjectId" id="2Wa62NBizcfU4dgMQFcLAYjAfr1" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;RequestMappingsPanelOrder0&quot;: &quot;0&quot;,
    &quot;RequestMappingsPanelOrder1&quot;: &quot;1&quot;,
    &quot;RequestMappingsPanelWidth0&quot;: &quot;75&quot;,
    &quot;RequestMappingsPanelWidth1&quot;: &quot;75&quot;,
    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
    &quot;git-widget-placeholder&quot;: &quot;User&quot;,
    &quot;ignore.virus.scanning.warn.message&quot;: &quot;true&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
    &quot;spring.configuration.checksum&quot;: &quot;e58674979710a6719599a4bfb593f501&quot;,
    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
  }
}</component>
  <component name="ReactorSettings">
    <option name="notificationShown" value="true" />
  </component>
  <component name="RunDashboard">
    <option name="configurationTypes">
      <set>
        <option value="SpringBootApplicationConfigurationType" />
      </set>
    </option>
  </component>
  <component name="RunManager" selected="Spring Boot.EvenementApplication">
    <configuration name="ApiGatewayApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" nameIsGenerated="true">
      <module name="api-gateway" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="com.example.apigateway.ApiGatewayApplication" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="AuthenticationApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" nameIsGenerated="true">
      <module name="Authentication" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="tn.esprit.Authentication.AuthenticationApplication" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="ChatApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" nameIsGenerated="true">
      <module name="Chat" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="tn.esprit.Chat.ChatApplication" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="EurekaApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" nameIsGenerated="true">
      <module name="Eureka" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="tn.esprit.Eureka.EurekaApplication" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="EvenementApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" temporary="true" nameIsGenerated="true">
      <module name="evenement" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="tn.esprit.evenement.EvenementApplication" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="tn.esprit.evenement.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="NotificationApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" nameIsGenerated="true">
      <module name="notification" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="tn.esprit.notification.NotificationApplication" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="PartenariatApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" temporary="true" nameIsGenerated="true">
      <module name="partenariat" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="tn.esprit.partenariat.PartenariatApplication" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="tn.esprit.partenariat.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="ProgrammeechangeApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" nameIsGenerated="true">
      <module name="programmeechange" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="tn.esprit.programmeechange.ProgrammeechangeApplication" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="RatingApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" temporary="true" nameIsGenerated="true">
      <module name="rating" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="tn.esprit.rating.RatingApplication" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="tn.esprit.rating.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="ReclamationApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" temporary="true" nameIsGenerated="true">
      <module name="reclamation" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="tn.esprit.reclamation.ReclamationApplication" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="tn.esprit.reclamation.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="UserManagementApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" nameIsGenerated="true">
      <module name="UserManagement" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="tn.esprit.usermanagement.UserManagementApplication" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="evenement/Dockerfile" type="docker-deploy" factoryName="dockerfile" temporary="true" server-name="Docker">
      <deployment type="dockerfile">
        <settings>
          <option name="sourceFilePath" value="evenement/Dockerfile" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Spring Boot.EvenementApplication" />
        <item itemvalue="Docker.evenement/Dockerfile" />
        <item itemvalue="Spring Boot.ReclamationApplication" />
        <item itemvalue="Spring Boot.RatingApplication" />
        <item itemvalue="Spring Boot.PartenariatApplication" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="2bd1626f-a9bc-4879-bec2-82ef27d29fb9" name="Changes" comment="" />
      <created>1696958137583</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1696958137583</updated>
      <workItem from="1696958139312" duration="555000" />
      <workItem from="1696977522989" duration="3143000" />
      <workItem from="1697016393201" duration="12704000" />
      <workItem from="1697104557147" duration="4096000" />
      <workItem from="1697113888557" duration="604000" />
      <workItem from="1697188510143" duration="6538000" />
      <workItem from="1697204027994" duration="103000" />
      <workItem from="1697204149769" duration="2507000" />
      <workItem from="1697209837645" duration="1078000" />
      <workItem from="1697210945973" duration="531000" />
      <workItem from="1697215659043" duration="3000" />
      <workItem from="1697215677365" duration="575000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="UnknownFeatures">
    <option featureType="dependencySupport" implementationName="java:org.springframework.security:spring-security-core" />
    <option featureType="dependencySupport" implementationName="java:org.springframework:spring-core" />
    <option featureType="dependencySupport" implementationName="java:jakarta.validation:jakarta.validation-api" />
    <option featureType="dependencySupport" implementationName="java:io.projectreactor:reactor-core" />
    <option featureType="dependencySupport" implementationName="java:javax.persistence:javax.persistence-api" />
    <option featureType="dependencySupport" implementationName="java:org.springframework.data:spring-data-commons" />
    <option featureType="dependencySupport" implementationName="executable:kubectl" />
    <option featureType="dependencySupport" implementationName="java:org.springframework.cloud:spring-cloud-context" />
    <option featureType="dependencySupport" implementationName="java:org.hibernate.validator:hibernate-validator" />
    <option featureType="dependencySupport" implementationName="java:org.springframework:spring-webmvc" />
    <option featureType="dependencySupport" implementationName="java:org.projectlombok:lombok" />
    <option featureType="dependencySupport" implementationName="executable:docker" />
    <option featureType="dependencySupport" implementationName="java:jakarta.persistence:jakarta.persistence-api" />
    <option featureType="dependencySupport" implementationName="java:org.springframework.boot:spring-boot" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>